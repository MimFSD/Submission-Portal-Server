// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role
  assignments Assignment[]  @relation("InstructorAssignments")
  submissions Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Assignment {
  id           Int        @id @default(autoincrement())
  title        String
  description  String
  deadline     DateTime
  instructor   User       @relation(fields: [instructorId], references: [id], name: "InstructorAssignments")
  instructorId Int
  submissions  Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Submission {
  id           Int       @id @default(autoincrement())
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  student      User      @relation(fields: [studentId], references: [id])
  studentId    Int
  url          String
  note         String?
  status       Status    @default(PENDING)
  feedback     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  INSTRUCTOR
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
